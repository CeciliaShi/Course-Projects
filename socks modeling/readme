The basic logic of our assignment is to establish a Bayesian model to predict the number of paired socks and single socks, based on our prior observations. Since we have already had the original codes on generative models (thanks to the blog), we only need to create a shiny app to provide the interactive experience for the audience, where they can plug in the number of socks pairs, the number of singleton socks, the standard deviation, the prior (hyper parameters for numbers of socks, standard deviation, hyper parameters for proportion of paired socks, the number of singletons), and then they will get the posterior and its visualization. The ui part sets up the framework for the whole app. We specify the parameters for the priors, and the ranges for these parameters. The server part is to create connections between input and output within the framework of our generative model. We set our prior distribution as negative binomial distribution and build our generative model on it. Then we simulate data from this generative model and match the results with previous observation, so we can determine whether our parameters are good or not. If the parameters are good, we keep them to a list of probable parameters; if not, we throw them away. As a result, we obtain a distribution for our parameters.

For task 2, we use mclapply function from the parallel package using 4 cores to achieve the best possible performance for the ABC sampler.
